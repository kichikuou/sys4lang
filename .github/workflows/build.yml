name: Build

on:
  - pull_request
  - push

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        ocaml-compiler:
          - 5.3

    runs-on: ${{ matrix.os }}

    steps:
      # Workaround for ppx_expect test failure on Windows
      - name: Set git to use LF
        if: matrix.os == 'windows-latest'
        run: |
          git config --global core.autocrlf false

      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup OCaml
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          dune-cache: true

      - name: Install dependencies
        run: opam install . --deps-only --with-test

      - name: Build
        run: opam exec -- dune build

      - name: Unit tests
        run: opam exec -- dune runtest

      - name: Copy the build artifact
        shell: bash
        env:
          SHELLOPTS: igncr  # https://github.com/ocaml/setup-ocaml/issues/815
        run: |
          mkdir -p dist/sys4lang
          cp _build/default/bin/*.exe dist/sys4lang/
          cp README.md CHANGELOG.md COPYING dist/sys4lang/

      - name: Copy DLLs
        shell: bash
        if: matrix.os == 'windows-latest'
        env:
          SHELLOPTS: igncr  # https://github.com/ocaml/setup-ocaml/issues/815
        run: |
          cp "${CYGWIN_ROOT}/usr/x86_64-w64-mingw32/sys-root/mingw/bin/zlib1.dll" dist/sys4lang/

      - name: Upload the build artifact
        uses: actions/upload-artifact@v4
        with:
          name: sys4lang-${{ matrix.os }}-${{ matrix.ocaml-compiler }}
          path: dist
